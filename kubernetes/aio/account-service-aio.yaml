apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: account-service
  name: account-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: account-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.network/test: "true"
        io.kompose.service: account-service
    spec:
      containers:
      - env:
        - name: SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE
          value: admin
        - name: SPRING_DATA_MONGODB_USERNAME
          value: root
        - name: SPRING_DATA_MONGODB_PASSWORD
          value: root
        - name: SPRING_DATA_MONGODB_DATABASE
          value: dbuser
        - name: SPRING_DATA_MONGODB_PORT
          value: "27017"
        - name: SPRING_DATA_MONGODB_HOST
          value: mongo
        - name: APP_SETTING_ORIGIN
          value: "http://localhost:3000"
        image: sansanvn/hellorepo:account-service
        imagePullPolicy: Always
        name: account-service
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 ()
    konghq.com/plugins: rl-by-ip
  creationTimestamp: null
  labels:
    io.kompose.service: account-service
  name: account-service
spec:
  ports:
  - name: "9000"
    port: 9000
    targetPort: 8080
    nodePort: 30000
  selector:
    io.kompose.service: account-service
  type: NodePort
status:
  loadBalancer: {}
