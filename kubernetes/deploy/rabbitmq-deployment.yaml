apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.network/test: "true"
        io.kompose.service: rabbitmq
    spec:
      containers:
      - args:
        - bash
        - -c
        - sleep 3; rabbitmq-server;
        env:
        - name: RABBITMQ_ERLANG_COOKIE
          value: '''secret_cookie'''
        image: rabbitmq:3-management
        imagePullPolicy: ""
        name: rabbitmq
        ports:
        - containerPort: 5672
        - containerPort: 15672
        resources: {}
        tty: true
        volumeMounts:
          - name: "config"
            mountPath: /etc/rabbitmq/definitions.json
            subPath: definitions.json
          - name: "config"
            mountPath: /etc/rabbitmq/enabled_plugins
            subPath: enabled_plugins
          - name: "config"
            mountPath: /etc/rabbitmq/rabbitmq.conf
            subPath: rabbitmq.conf
      hostname: rabbitmq1
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: "config"
        configMap:
          name: "rabbitmq-config"
status: {}
